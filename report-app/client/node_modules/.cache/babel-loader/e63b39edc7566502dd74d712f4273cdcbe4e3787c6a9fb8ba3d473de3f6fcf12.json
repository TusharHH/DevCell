{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tusha\\\\OneDrive\\\\Desktop\\\\DevCell\\\\report-app\\\\client\\\\src\\\\pages\\\\ReportPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport ReportPreview from '../components/ReportPreview';\n\n// import jsPDF from 'jspdf';\n// import html2canvas from 'html2canvas';\n\nimport domtoimage from 'dom-to-image';\nimport { jsPDF } from 'jspdf';\nimport '../styles/ReportPage.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ReportPage = () => {\n  _s();\n  const [template, setTemplate] = useState('template1');\n  const [title, setTitle] = useState('');\n  const [duration, setDuration] = useState('');\n  const [location, setLocation] = useState('');\n  const [pictures, setPictures] = useState([]);\n\n  // const handleGeneratePdf = async () => {\n  //   const reportElement = document.querySelector('.report-preview');\n\n  //   if (!reportElement) {\n  //     alert('No report to generate.');\n  //     return;\n  //   }\n\n  //   const images = reportElement.querySelectorAll('img');\n  //   const loadImage = (image) =>\n  //     new Promise((resolve, reject) => {\n  //       if (image.complete) {\n  //         resolve();\n  //       } else {\n  //         image.onload = resolve;\n  //         image.onerror = reject;\n  //       }\n  //     });\n\n  //   try {\n  //     await Promise.all([...images].map(loadImage));\n\n  //     html2canvas(reportElement)\n  //       .then((canvas) => {\n  //         const pdf = new jsPDF();\n  //         const imgData = canvas.toDataURL('image/png');\n\n  //         pdf.addImage(imgData, 'PNG', 0, 0);\n  //         pdf.save('report.pdf');\n  //       })\n  //       .catch((err) => {\n  //         console.error('Failed to generate PDF:', err);\n  //       });\n  //   } catch (error) {\n  //     console.error('Image loading failed:', error);\n  //   }\n  // };\n\n  const handleGeneratePdf = () => {\n    const reportElement = document.querySelector('.report-preview');\n    if (!reportElement) {\n      alert('No report to generate.');\n      return;\n    }\n    domtoimage.toPng(reportElement).then(dataUrl => {\n      const pdf = new jsPDF('p', 'mm', 'a4'); // Use A4 size\n\n      const pdfWidth = pdf.internal.pageSize.getWidth();\n      const pdfHeight = pdf.internal.pageSize.getHeight();\n      const img = new Image();\n      img.src = dataUrl;\n      img.onload = () => {\n        const imgWidth = img.width;\n        const imgHeight = img.height;\n\n        // Calculate the aspect ratio\n        const aspectRatio = imgWidth / imgHeight;\n\n        // Set new width and height based on aspect ratio and PDF size\n        let newImgWidth = pdfWidth;\n        let newImgHeight = newImgWidth / aspectRatio;\n\n        // If the height exceeds the PDF height, scale it down\n        if (newImgHeight > pdfHeight) {\n          newImgHeight = pdfHeight;\n          newImgWidth = newImgHeight * aspectRatio;\n        }\n\n        // Center the image in the PDF if it's smaller\n        const xOffset = (pdfWidth - newImgWidth) / 2;\n        const yOffset = (pdfHeight - newImgHeight) / 2;\n\n        // Add the image to the PDF and save it\n        pdf.addImage(dataUrl, 'PNG', xOffset, yOffset, newImgWidth, newImgHeight);\n        pdf.save('report.pdf');\n      };\n    }).catch(error => {\n      console.error('Error generating PDF:', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"report-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Generate Report\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"report-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Template:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: template,\n          onChange: e => setTemplate(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"template1\",\n            children: \"Template 1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"template2\",\n            children: \"Template 2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Title:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: title,\n          onChange: e => setTitle(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Duration:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: duration,\n          onChange: e => setDuration(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Location:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: location,\n          onChange: e => setLocation(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Pictures (URLs separated by commas):\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: pictures,\n          onChange: e => setPictures(e.target.value.split(','))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleGeneratePdf,\n        children: \"Download PDF\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ReportPreview, {\n      template: template,\n      title: title,\n      duration: duration,\n      location: location,\n      pictures: pictures\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n};\n_s(ReportPage, \"tJWr9EEm4wMX2sKOZhWHDD0Xi1M=\");\n_c = ReportPage;\nexport default ReportPage;\nvar _c;\n$RefreshReg$(_c, \"ReportPage\");","map":{"version":3,"names":["React","useState","ReportPreview","domtoimage","jsPDF","jsxDEV","_jsxDEV","ReportPage","_s","template","setTemplate","title","setTitle","duration","setDuration","location","setLocation","pictures","setPictures","handleGeneratePdf","reportElement","document","querySelector","alert","toPng","then","dataUrl","pdf","pdfWidth","internal","pageSize","getWidth","pdfHeight","getHeight","img","Image","src","onload","imgWidth","width","imgHeight","height","aspectRatio","newImgWidth","newImgHeight","xOffset","yOffset","addImage","save","catch","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","type","split","onClick","_c","$RefreshReg$"],"sources":["C:/Users/tusha/OneDrive/Desktop/DevCell/report-app/client/src/pages/ReportPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport ReportPreview from '../components/ReportPreview';\r\n\r\n// import jsPDF from 'jspdf';\r\n// import html2canvas from 'html2canvas';\r\n\r\nimport domtoimage from 'dom-to-image';\r\nimport { jsPDF } from 'jspdf';\r\n\r\nimport '../styles/ReportPage.scss';\r\n\r\nconst ReportPage = () => {\r\n  const [template, setTemplate] = useState('template1');\r\n  const [title, setTitle] = useState('');\r\n  const [duration, setDuration] = useState('');\r\n  const [location, setLocation] = useState('');\r\n  const [pictures, setPictures] = useState([]);\r\n\r\n  // const handleGeneratePdf = async () => {\r\n  //   const reportElement = document.querySelector('.report-preview');\r\n\r\n  //   if (!reportElement) {\r\n  //     alert('No report to generate.');\r\n  //     return;\r\n  //   }\r\n\r\n  //   const images = reportElement.querySelectorAll('img');\r\n  //   const loadImage = (image) =>\r\n  //     new Promise((resolve, reject) => {\r\n  //       if (image.complete) {\r\n  //         resolve();\r\n  //       } else {\r\n  //         image.onload = resolve;\r\n  //         image.onerror = reject;\r\n  //       }\r\n  //     });\r\n\r\n\r\n  //   try {\r\n  //     await Promise.all([...images].map(loadImage));\r\n\r\n\r\n  //     html2canvas(reportElement)\r\n  //       .then((canvas) => {\r\n  //         const pdf = new jsPDF();\r\n  //         const imgData = canvas.toDataURL('image/png');\r\n\r\n  //         pdf.addImage(imgData, 'PNG', 0, 0);\r\n  //         pdf.save('report.pdf');\r\n  //       })\r\n  //       .catch((err) => {\r\n  //         console.error('Failed to generate PDF:', err);\r\n  //       });\r\n  //   } catch (error) {\r\n  //     console.error('Image loading failed:', error);\r\n  //   }\r\n  // };\r\n\r\n  const handleGeneratePdf = () => {\r\n  const reportElement = document.querySelector('.report-preview');\r\n\r\n  if (!reportElement) {\r\n    alert('No report to generate.');\r\n    return;\r\n  }\r\n\r\n  domtoimage.toPng(reportElement)\r\n    .then((dataUrl) => {\r\n      const pdf = new jsPDF('p', 'mm', 'a4'); // Use A4 size\r\n\r\n      const pdfWidth = pdf.internal.pageSize.getWidth();\r\n      const pdfHeight = pdf.internal.pageSize.getHeight();\r\n\r\n      const img = new Image();\r\n      img.src = dataUrl;\r\n\r\n      img.onload = () => {\r\n        const imgWidth = img.width;\r\n        const imgHeight = img.height;\r\n\r\n        // Calculate the aspect ratio\r\n        const aspectRatio = imgWidth / imgHeight;\r\n\r\n        // Set new width and height based on aspect ratio and PDF size\r\n        let newImgWidth = pdfWidth;\r\n        let newImgHeight = newImgWidth / aspectRatio;\r\n\r\n        // If the height exceeds the PDF height, scale it down\r\n        if (newImgHeight > pdfHeight) {\r\n          newImgHeight = pdfHeight;\r\n          newImgWidth = newImgHeight * aspectRatio;\r\n        }\r\n\r\n        // Center the image in the PDF if it's smaller\r\n        const xOffset = (pdfWidth - newImgWidth) / 2;\r\n        const yOffset = (pdfHeight - newImgHeight) / 2;\r\n\r\n        // Add the image to the PDF and save it\r\n        pdf.addImage(dataUrl, 'PNG', xOffset, yOffset, newImgWidth, newImgHeight);\r\n        pdf.save('report.pdf');\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error generating PDF:', error);\r\n    });\r\n};\r\n\r\n\r\n  return (\r\n    <div className=\"report-page\">\r\n      <h1>Generate Report</h1>\r\n      <form className=\"report-form\">\r\n        <label>\r\n          Template:\r\n          <select value={template} onChange={(e) => setTemplate(e.target.value)}>\r\n            <option value=\"template1\">Template 1</option>\r\n            <option value=\"template2\">Template 2</option>\r\n          </select>\r\n        </label>\r\n\r\n        <label>\r\n          Title:\r\n          <input type=\"text\" value={title} onChange={(e) => setTitle(e.target.value)} />\r\n        </label>\r\n\r\n        <label>\r\n          Duration:\r\n          <input type=\"text\" value={duration} onChange={(e) => setDuration(e.target.value)} />\r\n        </label>\r\n\r\n        <label>\r\n          Location:\r\n          <input type=\"text\" value={location} onChange={(e) => setLocation(e.target.value)} />\r\n        </label>\r\n\r\n        <label>\r\n          Pictures (URLs separated by commas):\r\n          <input\r\n            type=\"text\"\r\n            value={pictures}\r\n            onChange={(e) => setPictures(e.target.value.split(','))}\r\n          />\r\n        </label>\r\n\r\n        <button type=\"button\" onClick={handleGeneratePdf}>Download PDF</button>\r\n      </form>\r\n\r\n      <ReportPreview\r\n        template={template}\r\n        title={title}\r\n        duration={duration}\r\n        location={location}\r\n        pictures={pictures}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ReportPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}